{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Demo\\\\source\\\\Front-end\\\\src\\\\UploadPatientData.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadPatientData = () => {\n  _s();\n  const [jsonData, setJsonData] = useState(null);\n\n  // Hàm xử lý chọn file\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file && file.type === \"application/json\") {\n      const reader = new FileReader();\n      reader.onload = () => {\n        try {\n          const parsedData = JSON.parse(reader.result);\n          setJsonData(parsedData);\n        } catch (error) {\n          alert(\"File không hợp lệ!\");\n        }\n      };\n      reader.readAsText(file);\n    } else {\n      alert(\"Vui lòng chọn file JSON!\");\n    }\n  };\n\n  // Hàm gửi dữ liệu từng bệnh nhân lên server\n  const handleSubmit = async () => {\n    if (!jsonData || !Array.isArray(jsonData)) {\n      alert(\"Dữ liệu không hợp lệ!\");\n      return;\n    }\n\n    // Lặp qua từng bệnh nhân trong jsonData và gửi từng cái một\n    for (const patient of jsonData) {\n      try {\n        const response = await fetch('http://127.0.0.1:8888/api/viewsAPIBacSi/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(patient) // Chỉ gửi một bệnh nhân\n        });\n        if (!response.ok) {\n          throw new Error('Lỗi khi gửi dữ liệu');\n        }\n        const result = await response.json();\n        console.log('Dữ liệu đã gửi thành công:', result);\n      } catch (error) {\n        console.error('Lỗi khi gửi bệnh nhân:', patient.hoTenBenhNhan, error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload d\\u1EEF li\\u1EC7u b\\u1EC7nh nh\\xE2n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".json\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), jsonData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"D\\u1EEF li\\u1EC7u JSON \\u0111\\xE3 t\\u1EA3i l\\xEAn:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(jsonData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadPatientData, \"j3ZU+r56R/sNKtjNBn60f1v4mk4=\");\n_c = UploadPatientData;\nexport default UploadPatientData;\nvar _c;\n$RefreshReg$(_c, \"UploadPatientData\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadPatientData","_s","jsonData","setJsonData","handleFileChange","event","file","target","files","type","reader","FileReader","onload","parsedData","JSON","parse","result","error","alert","readAsText","handleSubmit","Array","isArray","patient","response","fetch","method","headers","body","stringify","ok","Error","json","console","log","hoTenBenhNhan","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","_c","$RefreshReg$"],"sources":["D:/React/Demo/source/Front-end/src/UploadPatientData.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst UploadPatientData = () => {\r\n  const [jsonData, setJsonData] = useState(null);\r\n\r\n  // Hàm xử lý chọn file\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file && file.type === \"application/json\") {\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        try {\r\n          const parsedData = JSON.parse(reader.result);\r\n          setJsonData(parsedData);\r\n        } catch (error) {\r\n          alert(\"File không hợp lệ!\");\r\n        }\r\n      };\r\n      reader.readAsText(file);\r\n    } else {\r\n      alert(\"Vui lòng chọn file JSON!\");\r\n    }\r\n  };\r\n\r\n  // Hàm gửi dữ liệu từng bệnh nhân lên server\r\n  const handleSubmit = async () => {\r\n    if (!jsonData || !Array.isArray(jsonData)) {\r\n      alert(\"Dữ liệu không hợp lệ!\");\r\n      return;\r\n    }\r\n\r\n    // Lặp qua từng bệnh nhân trong jsonData và gửi từng cái một\r\n    for (const patient of jsonData) {\r\n      try {\r\n        const response = await fetch('http://127.0.0.1:8888/api/viewsAPIBacSi/', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(patient), // Chỉ gửi một bệnh nhân\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Lỗi khi gửi dữ liệu');\r\n        }\r\n\r\n        const result = await response.json();\r\n        console.log('Dữ liệu đã gửi thành công:', result);\r\n\r\n      } catch (error) {\r\n        console.error('Lỗi khi gửi bệnh nhân:', patient.hoTenBenhNhan, error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Upload dữ liệu bệnh nhân</h1>\r\n\r\n      {/* Input chọn file JSON */}\r\n      <input \r\n        type=\"file\" \r\n        accept=\".json\" \r\n        onChange={handleFileChange} \r\n      />\r\n      \r\n      {/* Hiển thị dữ liệu JSON nếu có */}\r\n      {jsonData && (\r\n        <div>\r\n          <h3>Dữ liệu JSON đã tải lên:</h3>\r\n          <pre>{JSON.stringify(jsonData, null, 2)}</pre>\r\n        </div>\r\n      )}\r\n\r\n      {/* Nút gửi dữ liệu lên server */}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadPatientData;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}