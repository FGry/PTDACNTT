{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Demo\\\\source\\\\Front-end\\\\src\\\\sevices\\\\ProtectedRoute.js\";\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  element\n}) => {\n  const isAuthenticated = localStorage.getItem('access_token'); // Kiểm tra xem có token trong localStorage\n\n  if (!isAuthenticated) {\n    // Nếu chưa đăng nhập, điều hướng về trang đăng nhập\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/dangNhap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Nếu đã đăng nhập, render component\n  return element;\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","element","isAuthenticated","localStorage","getItem","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React/Demo/source/Front-end/src/sevices/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ element }) => {\r\n  const isAuthenticated = localStorage.getItem('access_token'); // Kiểm tra xem có token trong localStorage\r\n\r\n  if (!isAuthenticated) {\r\n    // Nếu chưa đăng nhập, điều hướng về trang đăng nhập\r\n    return <Navigate to=\"/dangNhap\" />;\r\n  }\r\n\r\n  // Nếu đã đăng nhập, render component\r\n  return element;\r\n};\r\n\r\nexport default ProtectedRoute;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EACtC,MAAMC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;;EAE9D,IAAI,CAACF,eAAe,EAAE;IACpB;IACA,oBAAOH,OAAA,CAACF,QAAQ;MAACQ,EAAE,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpC;;EAEA;EACA,OAAOR,OAAO;AAChB,CAAC;AAACS,EAAA,GAVIV,cAAc;AAYpB,eAAeA,cAAc;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}