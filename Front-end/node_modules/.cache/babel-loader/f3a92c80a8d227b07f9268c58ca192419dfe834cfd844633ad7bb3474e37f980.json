{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Demo\\\\source\\\\Front-end\\\\src\\\\UploadPatientData.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n\n// const UploadPatientData = () => {\n//   const [jsonData, setJsonData] = useState(null);\n\n//   // Hàm xử lý chọn file\n//   const handleFileChange = (event) => {\n//     const file = event.target.files[0];\n//     if (file && file.type === \"application/json\") {\n//       const reader = new FileReader();\n//       reader.onload = () => {\n//         try {\n//           const parsedData = JSON.parse(reader.result);\n//           setJsonData(parsedData);\n//         } catch (error) {\n//           alert(\"File không hợp lệ!\");\n//         }\n//       };\n//       reader.readAsText(file);\n//     } else {\n//       alert(\"Vui lòng chọn file JSON!\");\n//     }\n//   };\n\n//   // Hàm gửi dữ liệu từng bệnh nhân lên server\n//   const handleSubmit = async () => {\n//     if (!jsonData || !Array.isArray(jsonData)) {\n//       alert(\"Dữ liệu không hợp lệ!\");\n//       return;\n//     }\n\n//     // Lặp qua từng bệnh nhân trong jsonData và gửi từng cái một\n//     for (const patient of jsonData) {\n//       try {\n//         const response = await fetch('http://127.0.0.1:8888/api/viewsAPIBacSi/', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//           body: JSON.stringify(patient), // Chỉ gửi một bệnh nhân\n//         });\n\n//         if (!response.ok) {\n//           throw new Error('Lỗi khi gửi dữ liệu');\n//         }\n\n//         const result = await response.json();\n//         console.log('Dữ liệu đã gửi thành công:', result);\n\n//       } catch (error) {\n//         console.error('Lỗi khi gửi bệnh nhân:', patient.hoTenBenhNhan, error);\n//       }\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Upload dữ liệu bệnh nhân</h1>\n\n//       {/* Input chọn file JSON */}\n//       <input \n//         type=\"file\" \n//         accept=\".json\" \n//         onChange={handleFileChange} \n//       />\n//       <button onClick={handleSubmit}>Gửi lên Server</button>\n\n//       {/* Hiển thị dữ liệu JSON nếu có */}\n//       {jsonData && (\n//         <div>\n//           <h3>Dữ liệu JSON đã tải lên:</h3>\n//           <pre>{JSON.stringify(jsonData, null, 2)}</pre>\n//         </div>\n//       )}\n\n//       {/* Nút gửi dữ liệu lên server */}\n\n//     </div>\n//   );\n// };\n\n// export default UploadPatientData;\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadPatientData = () => {\n  _s();\n  const [jsonData, setJsonData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(null);\n\n  // Tải dữ liệu từ file JSON khi component được render\n  useEffect(() => {\n    // Đọc dữ liệu từ file JSON trong thư mục public\n    fetch('./benh-an2.json') // Đảm bảo bạn có file JSON trong thư mục public\n    .then(response => response.json()).then(data => {\n      setJsonData(data);\n    }).catch(error => {\n      console.error('Lỗi khi tải dữ liệu:', error);\n    });\n  }, []);\n  const sendData = async () => {\n    setIsLoading(true);\n    setIsSuccess(null);\n    for (let patient of jsonData) {\n      const {\n        symptoms,\n        diagnosis,\n        treatment\n      } = patient;\n\n      // Cập nhật trường theo yêu cầu của API\n      const dataToSend = {\n        trieuChung: symptoms,\n        // `symptoms` -> `trieuChung`\n        chuanDoan: diagnosis,\n        // `diagnosis` -> `chuanDoan`\n        dieuTri: treatment,\n        // `treatment` -> `dieuTri`\n        benhNhan: patient.id // Nếu cần thêm thông tin về bệnh nhân, có thể là `id` hoặc thông tin khác\n      };\n      try {\n        const response = await fetch('http://127.0.0.1:8888/api/viewsAPIHoSo/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(dataToSend)\n        });\n        if (response.ok) {\n          const result = await response.json();\n          console.log('Dữ liệu bệnh nhân đã gửi thành công:', result);\n        } else {\n          // Lấy thông tin chi tiết lỗi từ server để debug\n          const errorDetails = await response.json();\n          console.error('Lỗi từ server:', errorDetails);\n          setIsSuccess(false);\n          setIsLoading(false);\n          return; // Dừng nếu có lỗi\n        }\n      } catch (error) {\n        console.error('Lỗi khi gửi dữ liệu:', error);\n        setIsSuccess(false);\n        setIsLoading(false);\n        return; // Dừng nếu có lỗi\n      }\n    }\n    setIsSuccess(true);\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload D\\u1EEF Li\\u1EC7u B\\u1EC7nh Nh\\xE2n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendData,\n      disabled: isLoading || jsonData.length === 0,\n      children: isLoading ? 'Đang gửi...' : 'Gửi Dữ Liệu'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), isSuccess === true && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"G\\u1EEDi d\\u1EEF li\\u1EC7u th\\xE0nh c\\xF4ng!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 30\n    }, this), isSuccess === false && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0110\\xE3 x\\u1EA3y ra l\\u1ED7i khi g\\u1EEDi d\\u1EEF li\\u1EC7u!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 31\n    }, this), jsonData.length === 0 && !isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0110ang t\\u1EA3i d\\u1EEF li\\u1EC7u...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 47\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadPatientData, \"ACwFCEzCiV+dfhf+K/0VQN3ADCE=\");\n_c = UploadPatientData;\nexport default UploadPatientData;\nvar _c;\n$RefreshReg$(_c, \"UploadPatientData\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UploadPatientData","_s","jsonData","setJsonData","isLoading","setIsLoading","isSuccess","setIsSuccess","fetch","then","response","json","data","catch","error","console","sendData","patient","symptoms","diagnosis","treatment","dataToSend","trieuChung","chuanDoan","dieuTri","benhNhan","id","method","headers","body","JSON","stringify","ok","result","log","errorDetails","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","length","_c","$RefreshReg$"],"sources":["D:/React/Demo/source/Front-end/src/UploadPatientData.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n\r\n// const UploadPatientData = () => {\r\n//   const [jsonData, setJsonData] = useState(null);\r\n\r\n//   // Hàm xử lý chọn file\r\n//   const handleFileChange = (event) => {\r\n//     const file = event.target.files[0];\r\n//     if (file && file.type === \"application/json\") {\r\n//       const reader = new FileReader();\r\n//       reader.onload = () => {\r\n//         try {\r\n//           const parsedData = JSON.parse(reader.result);\r\n//           setJsonData(parsedData);\r\n//         } catch (error) {\r\n//           alert(\"File không hợp lệ!\");\r\n//         }\r\n//       };\r\n//       reader.readAsText(file);\r\n//     } else {\r\n//       alert(\"Vui lòng chọn file JSON!\");\r\n//     }\r\n//   };\r\n\r\n//   // Hàm gửi dữ liệu từng bệnh nhân lên server\r\n//   const handleSubmit = async () => {\r\n//     if (!jsonData || !Array.isArray(jsonData)) {\r\n//       alert(\"Dữ liệu không hợp lệ!\");\r\n//       return;\r\n//     }\r\n\r\n//     // Lặp qua từng bệnh nhân trong jsonData và gửi từng cái một\r\n//     for (const patient of jsonData) {\r\n//       try {\r\n//         const response = await fetch('http://127.0.0.1:8888/api/viewsAPIBacSi/', {\r\n//           method: 'POST',\r\n//           headers: {\r\n//             'Content-Type': 'application/json',\r\n//           },\r\n//           body: JSON.stringify(patient), // Chỉ gửi một bệnh nhân\r\n//         });\r\n\r\n//         if (!response.ok) {\r\n//           throw new Error('Lỗi khi gửi dữ liệu');\r\n//         }\r\n\r\n//         const result = await response.json();\r\n//         console.log('Dữ liệu đã gửi thành công:', result);\r\n\r\n//       } catch (error) {\r\n//         console.error('Lỗi khi gửi bệnh nhân:', patient.hoTenBenhNhan, error);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Upload dữ liệu bệnh nhân</h1>\r\n\r\n//       {/* Input chọn file JSON */}\r\n//       <input \r\n//         type=\"file\" \r\n//         accept=\".json\" \r\n//         onChange={handleFileChange} \r\n//       />\r\n//       <button onClick={handleSubmit}>Gửi lên Server</button>\r\n      \r\n//       {/* Hiển thị dữ liệu JSON nếu có */}\r\n//       {jsonData && (\r\n//         <div>\r\n//           <h3>Dữ liệu JSON đã tải lên:</h3>\r\n//           <pre>{JSON.stringify(jsonData, null, 2)}</pre>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Nút gửi dữ liệu lên server */}\r\n\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UploadPatientData;\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst UploadPatientData = () => {\r\n  const [jsonData, setJsonData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isSuccess, setIsSuccess] = useState(null);\r\n\r\n  // Tải dữ liệu từ file JSON khi component được render\r\n  useEffect(() => {\r\n    // Đọc dữ liệu từ file JSON trong thư mục public\r\n    fetch('./benh-an2.json') // Đảm bảo bạn có file JSON trong thư mục public\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setJsonData(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Lỗi khi tải dữ liệu:', error);\r\n      });\r\n  }, []);\r\n\r\n  const sendData = async () => {\r\n    setIsLoading(true);\r\n    setIsSuccess(null);\r\n\r\n    for (let patient of jsonData) {\r\n      const { symptoms, diagnosis, treatment } = patient;\r\n\r\n      // Cập nhật trường theo yêu cầu của API\r\n      const dataToSend = {\r\n        trieuChung: symptoms,   // `symptoms` -> `trieuChung`\r\n        chuanDoan: diagnosis,   // `diagnosis` -> `chuanDoan`\r\n        dieuTri: treatment,     // `treatment` -> `dieuTri`\r\n        benhNhan: patient.id    // Nếu cần thêm thông tin về bệnh nhân, có thể là `id` hoặc thông tin khác\r\n      };\r\n\r\n      try {\r\n        const response = await fetch('http://127.0.0.1:8888/api/viewsAPIHoSo/', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(dataToSend),\r\n        });\r\n\r\n        if (response.ok) {\r\n          const result = await response.json();\r\n          console.log('Dữ liệu bệnh nhân đã gửi thành công:', result);\r\n        } else {\r\n          // Lấy thông tin chi tiết lỗi từ server để debug\r\n          const errorDetails = await response.json();\r\n          console.error('Lỗi từ server:', errorDetails);\r\n          setIsSuccess(false);\r\n          setIsLoading(false);\r\n          return; // Dừng nếu có lỗi\r\n        }\r\n      } catch (error) {\r\n        console.error('Lỗi khi gửi dữ liệu:', error);\r\n        setIsSuccess(false);\r\n        setIsLoading(false);\r\n        return; // Dừng nếu có lỗi\r\n      }\r\n    }\r\n\r\n    setIsSuccess(true);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Upload Dữ Liệu Bệnh Nhân</h1>\r\n\r\n      {/* Nút gửi dữ liệu */}\r\n      <button onClick={sendData} disabled={isLoading || jsonData.length === 0}>\r\n        {isLoading ? 'Đang gửi...' : 'Gửi Dữ Liệu'}\r\n      </button>\r\n\r\n      {/* Thông báo thành công hay thất bại */}\r\n      {isSuccess === true && <p>Gửi dữ liệu thành công!</p>}\r\n      {isSuccess === false && <p>Đã xảy ra lỗi khi gửi dữ liệu!</p>}\r\n      {jsonData.length === 0 && !isLoading && <p>Đang tải dữ liệu...</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadPatientData;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}